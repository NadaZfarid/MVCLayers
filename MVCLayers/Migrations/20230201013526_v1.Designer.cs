// <auto-generated />
using System;
using MVCLayers.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCLayers.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20230201013526_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCLayers.Models.Department", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<int?>("Manage_SSN")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("Number");

                    b.HasIndex("Manage_SSN")
                        .IsUnique()
                        .HasFilter("[Manage_SSN] IS NOT NULL");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MVCLayers.Models.Dependent", b =>
                {
                    b.Property<int?>("Emp_SSN")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("BDate")
                        .HasColumnType("Date");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Emp_SSN", "Name");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("MVCLayers.Models.Dept_loc", b =>
                {
                    b.Property<int?>("Dept_id")
                        .HasColumnType("int");

                    b.Property<string>("Locatoin")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Dept_id", "Locatoin");

                    b.ToTable("Dept_Locs");
                });

            modelBuilder.Entity("MVCLayers.Models.Emp_Proj", b =>
                {
                    b.Property<int?>("Emp_SSN")
                        .HasColumnType("int");

                    b.Property<int?>("Proj_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.HasKey("Emp_SSN", "Proj_Id");

                    b.HasIndex("Proj_Id");

                    b.ToTable("Emp_Projs");
                });

            modelBuilder.Entity("MVCLayers.Models.Employee", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("BDate")
                        .HasColumnType("Date");

                    b.Property<int?>("Dept_id")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int?>("Super_SSN")
                        .HasColumnType("int");

                    b.Property<int?>("manageNumber")
                        .HasColumnType("int");

                    b.HasKey("SSN");

                    b.HasIndex("Super_SSN");

                    b.HasIndex("manageNumber");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MVCLayers.Models.Project", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<int?>("Dept_id")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Number");

                    b.HasIndex("Dept_id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MVCLayers.Models.Department", b =>
                {
                    b.HasOne("MVCLayers.Models.Employee", "employee")
                        .WithOne("department")
                        .HasForeignKey("MVCLayers.Models.Department", "Manage_SSN");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("MVCLayers.Models.Dependent", b =>
                {
                    b.HasOne("MVCLayers.Models.Employee", "Dep_employee")
                        .WithMany("Dependents")
                        .HasForeignKey("Emp_SSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dep_employee");
                });

            modelBuilder.Entity("MVCLayers.Models.Dept_loc", b =>
                {
                    b.HasOne("MVCLayers.Models.Department", "department")
                        .WithMany("Dept_Locs")
                        .HasForeignKey("Dept_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("MVCLayers.Models.Emp_Proj", b =>
                {
                    b.HasOne("MVCLayers.Models.Employee", "Pemployee")
                        .WithMany("Emp_Projs")
                        .HasForeignKey("Emp_SSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCLayers.Models.Project", "project")
                        .WithMany("Emp_Projs")
                        .HasForeignKey("Proj_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pemployee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("MVCLayers.Models.Employee", b =>
                {
                    b.HasOne("MVCLayers.Models.Employee", "super")
                        .WithMany("supers")
                        .HasForeignKey("Super_SSN");

                    b.HasOne("MVCLayers.Models.Department", "manage")
                        .WithMany("Employees")
                        .HasForeignKey("manageNumber");

                    b.Navigation("manage");

                    b.Navigation("super");
                });

            modelBuilder.Entity("MVCLayers.Models.Project", b =>
                {
                    b.HasOne("MVCLayers.Models.Department", "department")
                        .WithMany("Projects")
                        .HasForeignKey("Dept_id");

                    b.Navigation("department");
                });

            modelBuilder.Entity("MVCLayers.Models.Department", b =>
                {
                    b.Navigation("Dept_Locs");

                    b.Navigation("Employees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("MVCLayers.Models.Employee", b =>
                {
                    b.Navigation("Dependents");

                    b.Navigation("Emp_Projs");

                    b.Navigation("department");

                    b.Navigation("supers");
                });

            modelBuilder.Entity("MVCLayers.Models.Project", b =>
                {
                    b.Navigation("Emp_Projs");
                });
#pragma warning restore 612, 618
        }
    }
}
